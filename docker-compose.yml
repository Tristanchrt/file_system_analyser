version: "3"  

networks:
  kafka-test:
    external: true

services:
  metric_service:
    build:
      context: ./metric_service/.
      target: dev
    container_name: metric_service
    command: cargo watch -x run
    volumes:
      - ./metric_service/:/usr/src/myapp
    depends_on:
      - kafka
    networks:
      - kafka-test

  metric_engine:
    build:
      context: ./metric_engine/.
      target: dev
    container_name: metric_engine
    command: cargo watch -x run
    volumes:
      - ./metric_engine/:/usr/src/myapp
    depends_on:
      - kafka
      - metric_service
    networks:
      - kafka-test
      
  kafka:
    image: 'bitnami/kafka:3.3.1'
    container_name: kafka-test
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_KRAFT_CLUSTER_ID=r4zt_wrqTRuT7W2NJsB_GA
    volumes:
      - kafka-volume:/bitnami/kafka
    networks:
      - kafka-test
      
  kafka-ui:
    container_name: kafka-ui
    image: 'provectuslabs/kafka-ui:latest'
    ports:
      - "8085:8080"
    environment:
      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_NAME=r4zt_wrqTRuT7W2NJsB_GA   
    networks:
      - kafka-test
      
volumes:
  kafka-volume: {}